@charset "utf-8";

/* TYPOGRAPHY FOR TOKENIZED, SEMANTIC ELEMENTS ============================== */

/* Headings ----------------------------------------------------------------- */
.cm-header   { color:rgb(67,67,67); }
.cm-header-1, .cm-header-2, .cm-header-3, .cm-header-4 { padding-bottom: 1rem; }
.cm-header-1:first-of-type { line-height: 4.0rem; font-size: 3.9rem; padding-top:1.0rem; }
.cm-header-1 { line-height: 3.0rem; font-size: 2.9rem; padding-top:3.0rem; }
.cm-header-2 { line-height: 2.5rem; font-size: 2.4rem; padding-top:3.0rem; }
.cm-header-3 { line-height: 2.0rem; font-size: 1.9rem; padding-top:2.0rem; }
.cm-header-4 { line-height: 1.0rem; font-size: 1.0rem; padding-top:2.0rem; text-transform: uppercase; }
.cm-header-5 { line-height: 1.0rem; font-size: 1.0rem; padding-top:2.0rem; font-weight:  bold; }
.cm-header-6 { line-height: 1.0rem; font-size: 1.0rem; padding-top:2.0rem; font-style: italic; }
.cm-formatting-header-1:first-of-type { padding-top: 1rem; }
.cm-formatting-header-1 { padding-top: 0.70rem; }
.cm-formatting-header-2 { padding-top: 0.55rem; }
.cm-formatting-header-3 { padding-top: 0.45rem; }
@media screen and (max-width: 460px) {
  .cm-header-1:first-of-type { line-height: 2.5rem; font-size: 2.4rem; padding-top:1.0rem; }
  .cm-header-1, .cm-header-2 { line-height: 2.0rem; font-size: 1.9rem; padding-top:2.0rem; }
  .cm-header-3               { line-height: 1.5rem; font-size: 1.4rem; padding-top:1.5rem; }
}

/* Emphasis ----------------------------------------------------------------- */
.cm-em { font-style:italic; }
.cm-strong {
	font-weight: bold;
	-webkit-font-feature-settings: "smcp";
		 -moz-font-feature-settings: "smcp";
			-ms-font-feature-settings: "smcp";
			 -o-font-feature-settings: "smcp";
					font-feature-settings: "smcp";
}

/* Hyperlinks --------------------------------------------------------------- */
.cm-link { color: rgb(0,0,180); text-decoration: none;}
.cm-link:hover { color: rgb(0,0,200); text-decoration: underline; cursor:pointer;}


/* Referenced links --------------------------------------------------------- */
/* .cm-formatting-link + .cm-link + .cm-formatting-link + .cm-link { } */
.cm-formatting-link + .cm-link + .cm-formatting-link + .cm-string,
.cm-formatting-link + .cm-link + .cm-formatting-link + .cm-string + * {
	color:red;
	font-size: 0.7em;
}

/* Blockquotes -------------------------------------------------------------- */
.cm-quote,
.cm-quote-1 {
	font-style: italic;
	/* To do:
		 We want an empty white space above and below the blockquote.
		 We also want the blockquote to be indented both on the left and the right.
		 We would do that by setting margings or paddings, but then we have to also
		 set a display:block; on the <span>, which we cannot do, because that fucks
		 up the editing behaviour of CodeMirror.
	display        : block;
	padding-top    : 0.5rem;
	padding-bottom : 0.5rem;
	padding-left   : 1rem;
	padding-right  : 1rem;
	*/
	/* To do: bug:
		Apparently, the blockquote needs to be followed by an empty line, if not
		it leaks into the following line.
	*/
}

/* (Fenced) Code blocks ----------------------------------------------------- */
.cm-comment, .cm-leadingspace {
	/* markdown mode styles `...` and indented code blocks as "comment". */
	max-width: 60rem;
	overflow-x:scroll;
	/*white-space: nowrap;*/
	font-family: Courier, monospace;
	font-size:0.9em;
	background-color: rgb(245,245,245);
}

/* Inline code -------------------------------------------------------------- */
.cm-formatting-code + .cm-comment {
	padding-left: 0.25em;
	padding-right: 0.25em;
}

/* Math --------------------------------------------------------------------- */
.math.cm-comment {
	/* exclude math from monospace style to avoid mathjax vertically
		 squishing formulas, especially display. */
	font-family: serif;
}
/* Below are **very** ugly hacks that hack on CodeMirrorâ€™s very ugly DOM structure.
   To do: bug: if an equation is the only marked-up element in a paragraph, it will
   break the line as if it were a stand-alone equation. */
.CodeMirror-code { counter-reset: equation; }
pre > span.CodeMirror-widget { text-align: center; }
pre > span.CodeMirror-widget:only-of-type { display:block; }
pre > span.CodeMirror-widget:only-of-type > .math { display:block !important; width:100%; }
pre > span.CodeMirror-widget:only-of-type > .math > .MathJax_Display { display:block !important; width:100%; counter-increment: equation; }
pre > span.CodeMirror-widget:only-of-type > .math > .MathJax_Display:after {
	display: block;
	position: absolute;
	width:2rem;
	white-space: nowrap;
	overflow:visible;
	right:-3rem;
	top:0;
	bottom:0;
	content:"("counter(equation, lower-greek)")";
	text-transform: uppercase;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	 -webkit-flex-direction: row;
			 -ms-flex-direction: row;
					 flex-direction: row;
				-webkit-flex-wrap: nowrap;
						-ms-flex-wrap: nowrap;
								flex-wrap: nowrap;
	-webkit-justify-content: flex-start;
						-ms-flex-pack: start;
					justify-content: flex-start;
		-webkit-align-content: center;
			 -ms-flex-line-pack: center;
						align-content: center;
			-webkit-align-items: center;
					 -ms-flex-align: center;
							align-items: center;
}


